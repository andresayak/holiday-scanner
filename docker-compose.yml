version: '3.4'
services:

  backend_app:
    build:
      context: ./backend_app
      dockerfile: Dockerfile
      target: base
    container_name: backend_app
    restart: unless-stopped
    tty: true
    user: "1000:1000"
    environment:
      ANKR_PROVIDER_KEY: ${ANKR_PROVIDER_KEY}
      DATABASE_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      ETHERSCAN_API: ${ETHERSCAN_API}
    working_dir: /var/www/app
    volumes:
      - ./backend_app:/var/www/app:z
      - ./volumes/logs:/var/www/logs:z
      - ./volumes/storage:/var/www/backend_app/storage:z
    ports:
      - "5000:5000"
    extra_hosts:
      - "host:host-gateway"
    links:
      - db
      - redis
    networks:
      - app-network

  hardhat:
    build:
      context: ./blockchain
      dockerfile: Dockerfile
      target: base
    container_name: hardhat
    restart: unless-stopped
    tty: true
    user: "1000:1000"
    working_dir: /var/www/app
    expose:
      - "8545"
    volumes:
      - ./blockchain:/var/www/app:z
      - ./volumes/logs:/var/www/logs:z
      - ./volumes/storage:/var/www/backend_app/storage:z
    extra_hosts:
      - "host:host-gateway"
    networks:
      - app-network

  db:
    image: mariadb:latest
    container_name: db
    restart: unless-stopped
    tty: true
    user: "1000:1000"
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: main
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - app-network
    volumes:
      - ./volumes/mysql-datavolume:/var/lib/mysql:z

  phpmyadmin:
    depends_on:
      - db
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    tty: true
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    tty: true
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    command: [ 'redis-server', '--appendonly yes', '--requirepass $REDIS_PASSWORD' ]
    ports:
      - "6379:6379"
    volumes:
      - ./volumes/redis-datavolume:/data:z
    networks:
      - app-network

  selenium:
    image: selenium/standalone-firefox:4.0.0-beta-1-prerelease-20201208
    container_name: firefox
    privileged: true
    environment:
      - SCREEN_WIDTH=1366
      - SCREEN_HEIGHT=768
      - SCREEN_DEPTH=24
      - SCREEN_DPI=74
      - GRID_BROWSER_TIMEOUT=30
      - NODE_MAX_INSTANCES=5
      - NODE_MAX_SESSION=5
      - START_XVFB=true
      - shm-size=2g
      - JAVA_OPTS=-Dselenium.LOGGER.level=WARNING -Dwebdriver.chrome.whitelistedIps=
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
